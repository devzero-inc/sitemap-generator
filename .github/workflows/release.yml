name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    name: Build and Release Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build binary
      run: |
        mkdir -p binaries/${{ matrix.goos }}-${{ matrix.goarch }}
        binary_name="sitemap-generator"
        if [ ${{ matrix.goos }} = "windows" ]; then binary_name="sitemap-generator.exe"; fi
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o binaries/${{ matrix.goos }}-${{ matrix.goarch }}/${binary_name}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: binaries/${{ matrix.goos }}-${{ matrix.goarch }}/sitemap-generator*
        asset_name: sitemap-generator-${{ matrix.goos }}-${{ matrix.goarch }}
        asset_content_type: application/octet-stream